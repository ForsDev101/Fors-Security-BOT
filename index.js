const { Client, GatewayIntentBits, PermissionsBitField } = require('discord.js');

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
  ],
});

const ROLE_ORDERED = [
  { name: "üëë Adalet Bakanƒ±", position: 1 },
  { name: "üëë Adalet Bakanƒ± Yardƒ±mcƒ±sƒ±", position: 2 },
  { name: "‚öñÔ∏è H√ÇKƒ∞M", position: 3 },
  { name: "üßë‚Äç‚öñÔ∏è BA≈ûSAVCI", position: 4 },
  { name: "üë®‚Äç‚öñÔ∏è SAVCI", position: 5 },
  { name: "üßë‚Äçüéì STAJYER AVUKAT", position: 6 },
  { name: "üßë‚Äçüíº AVUKAT", position: 7 },

  { name: "üï∂Ô∏è Mƒ∞T BA≈ûKANI", position: 8 },
  { name: "üß† ƒ∞STƒ∞HBARAT SUBAYI", position: 9 },
  { name: "üïµÔ∏è ALAN AJANI", position: 10 },

  { name: "üõ°Ô∏è ƒ∞NZƒ∞BAT KOMUTANI", position: 11 },
  { name: "üë®‚Äç‚úàÔ∏è ƒ∞NZƒ∞BAT SUBAYI", position: 12 },
  { name: "üëÆ ƒ∞NZƒ∞BAT ER", position: 13 },

  { name: "ü™ñ JANDARMA KOMUTANI", position: 14 },
  { name: "üßë‚Äç‚úàÔ∏è JANDARMA SUBAYI", position: 15 },
  { name: "üëÆ JANDARMA ER", position: 16 },

  { name: "üéÆ OYUNCU", position: 17 },
];

// Kanal ve kategoriler (emoji + b√ºy√ºk harf)
const CATEGORIES = [
  {
    name: "üì¢ GENEL Bƒ∞LGƒ∞LENDƒ∞RME",
    channels: [
      "üìú KURALLAR",
      "üì£ DUYURULAR",
      "üìå ATAMA-DUYURULARI",
      "üîÑ G√ñREV-DEƒûƒ∞≈ûƒ∞KLƒ∞KLERƒ∞",
      "üìù BA≈ûVURU-DUYURULARI"
    ],
    visibleRoles: ["@everyone"],
    writeRoles: []
  },
  {
    name: "‚öñÔ∏è ADALET BAKANLIƒûI",
    channels: [
      "üßæ MAHKEME-SONU√áLARI",
      "üìä DAVA-ƒ∞STATƒ∞STƒ∞KLERƒ∞",
      "üö® ≈ûƒ∞KAYET-Bƒ∞LDƒ∞Rƒ∞Mƒ∞",
      "üí° √ñNERƒ∞-VE-ELE≈ûTƒ∞Rƒ∞LER"
    ],
    visibleRoles: ["@everyone"],
    writeRoles: ["üëë Adalet Bakanƒ±"]
  },
  {
    name: "üì• BA≈ûVURULAR",
    channels: [
      "‚öñÔ∏è H√ÇKƒ∞M-BA≈ûVURU",
      "üïµÔ∏è SAVCI-BA≈ûVURU",
      "üßë‚Äçüíº AVUKAT-BA≈ûVURU"
    ],
    visibleRoles: ["@everyone"],
    writeRoles: []
  },
  {
    name: "üõ°Ô∏è ASKERƒ∞ ƒ∞NZƒ∞BAT KOMUTANLIƒûI",
    channels: [
      "üìã ƒ∞NZƒ∞BAT-RAPOR",
      "üßë‚Äç‚öñÔ∏è ƒ∞NZƒ∞BAT-MAHKEME",
      "‚úÖ ƒ∞NZƒ∞BAT-SONU√á"
    ],
    visibleRoles: ["@everyone"],
    writeRoles: ["üõ°Ô∏è ƒ∞NZƒ∞BAT KOMUTANI", "üë®‚Äç‚úàÔ∏è ƒ∞NZƒ∞BAT SUBAYI"]
  },
  {
    name: "ü™ñ JANDARMA GENEL KOMUTANLIƒûI",
    channels: [
      "üìã JANDARMA-RAPOR",
      "üßë‚Äç‚öñÔ∏è JANDARMA-MAHKEME",
      "‚úÖ JANDARMA-SONU√á"
    ],
    visibleRoles: ["@everyone"],
    writeRoles: ["ü™ñ JANDARMA KOMUTANI", "üßë‚Äç‚úàÔ∏è JANDARMA SUBAYI"]
  },
  {
    name: "üïµÔ∏è Mƒ∞LL√é ƒ∞STƒ∞HBARAT TE≈ûKƒ∞LATI",
    channels: [
      "üï∂Ô∏è Mƒ∞T-RAPOR",
      "‚öñÔ∏è Mƒ∞T-MAHKEME",
      "üóÇÔ∏è Mƒ∞T-SONU√á"
    ],
    visibleRoles: ["üï∂Ô∏è Mƒ∞T BA≈ûKANI", "üß† ƒ∞STƒ∞HBARAT SUBAYI", "üïµÔ∏è ALAN AJANI", "üëë Adalet Bakanƒ±", "üëë Adalet Bakanƒ± Yardƒ±mcƒ±sƒ±"],
    writeRoles: ["üï∂Ô∏è Mƒ∞T BA≈ûKANI", "üß† ƒ∞STƒ∞HBARAT SUBAYI", "üïµÔ∏è ALAN AJANI"]
  },
  {
    name: "üì° Bƒ∞Rƒ∞M KOORDƒ∞NASYONU",
    channels: [
      "ü§ù Bƒ∞Rƒ∞M-KOORDƒ∞NASYONU"
    ],
    visibleRoles: ["@everyone"],
    writeRoles: ["üëë Adalet Bakanƒ±", "ü™ñ JANDARMA KOMUTANI", "üõ°Ô∏è ƒ∞NZƒ∞BAT KOMUTANI", "üï∂Ô∏è Mƒ∞T BA≈ûKANI"]
  }
];

client.on("messageCreate", async (message) => {
  if (message.content === ".ba≈ülat") {
    if (!message.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
      message.reply("‚ùå Bu komutu kullanmak i√ßin y√∂netici olmalƒ±sƒ±n!");
      return;
    }

    const guild = message.guild;
    const everyone = guild.roles.everyone;

    try {
      // ROLLERƒ∞ OLU≈ûTUR (√ñnce roller yoksa olu≈üturulur)
      const createdRoles = {};

      // Roller sƒ±ralƒ± olu≈üturuluyor:
      for (const roleData of ROLE_ORDERED) {
        let role = guild.roles.cache.find(r => r.name === roleData.name);
        if (!role) {
          role = await guild.roles.create({
            name: roleData.name,
            reason: "Sunucu kurulumu i√ßin rol olu≈üturuldu",
            // position: roleData.position // Discord API otomatik sƒ±ralar, elle deƒüi≈ütirmek i√ßin extra i≈ülemler gerek
          });
        }
        createdRoles[roleData.name] = role;
      }

      // KATEGORƒ∞LERƒ∞ VE KANALLARI OLU≈ûTUR
      for (const cat of CATEGORIES) {
        // Kategori olu≈ütur
        const category = await guild.channels.create({
          name: cat.name,
          type: 4 // Category
        });

        for (const chName of cat.channels) {
          // ƒ∞zinler
          // √ñncelikle @everyone izinleri
          const permissionOverwrites = [];

          if (cat.visibleRoles.includes("@everyone")) {
            permissionOverwrites.push({
              id: everyone.id,
              allow: [PermissionsBitField.Flags.ViewChannel],
              deny: []
            });
          } else {
            permissionOverwrites.push({
              id: everyone.id,
              deny: [PermissionsBitField.Flags.ViewChannel]
            });
          }

          // Visible rollere g√∂r√ºn√ºrl√ºk ver
          for (const vRoleName of cat.visibleRoles) {
            if (vRoleName === "@everyone") continue;
            const role = createdRoles[vRoleName];
            if (role) {
              permissionOverwrites.push({
                id: role.id,
                allow: [PermissionsBitField.Flags.ViewChannel]
              });
            }
          }

          // Write rollere yazma izni ver
          for (const wRoleName of cat.writeRoles) {
            const role = createdRoles[wRoleName];
            if (role) {
              permissionOverwrites.push({
                id: role.id,
                allow: [PermissionsBitField.Flags.SendMessages]
              });
            }
          }

          await guild.channels.create({
            name: chName,
            type: 0,
            parent: category.id,
            permissionOverwrites
          });
        }
      }

      message.reply("‚úÖ Sunucu kurulumu tamamlandƒ±!");
    } catch (error) {
      console.error(error);
      message.reply("‚ùå Sunucu kurulumu sƒ±rasƒ±nda bir hata olu≈ütu.");
    }
  }
});

client.login(process.env.TOKEN);
