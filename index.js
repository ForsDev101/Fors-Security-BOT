const { Client, GatewayIntentBits, PermissionsBitField, ChannelType } = require('discord.js');

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
  ],
});

const ROLE_ORDERED = [
  { name: "üëë ADALET BAKANI", position: 1 },
  { name: "üëë ADALET BAKANI YARDIMCISI", position: 2 },
  { name: "‚öñÔ∏è H√ÇKƒ∞M", position: 3 },
  { name: "üßë‚Äç‚öñÔ∏è BA≈ûSAVCI", position: 4 },
  { name: "üë®‚Äç‚öñÔ∏è SAVCI", position: 5 },
  { name: "üßë‚Äçüéì STAJYER AVUKAT", position: 6 },
  { name: "üßë‚Äçüíº AVUKAT", position: 7 },

  { name: "üï∂Ô∏è Mƒ∞T BA≈ûKANI", position: 8 },
  { name: "üß† ƒ∞STƒ∞HBARAT SUBAYI", position: 9 },
  { name: "üïµÔ∏è ALAN AJANI", position: 10 },

  { name: "üõ°Ô∏è ƒ∞NZƒ∞BAT KOMUTANI", position: 11 },
  { name: "üë®‚Äç‚úàÔ∏è ƒ∞NZƒ∞BAT SUBAYI", position: 12 },
  { name: "üëÆ ƒ∞NZƒ∞BAT ER", position: 13 },

  { name: "ü™ñ JANDARMA KOMUTANI", position: 14 },
  { name: "üßë‚Äç‚úàÔ∏è JANDARMA SUBAYI", position: 15 },
  { name: "üëÆ JANDARMA ER", position: 16 },

  { name: "üéÆ OYUNCU", position: 17 },
];

// Kategori ve kanallar, izinlerle
const CATEGORIES = [
  {
    name: "üì¢ GENEL Bƒ∞LGƒ∞LENDƒ∞RME",
    channels: [
      "üìú„ÉªKURALLAR",
      "üì£„ÉªDUYURULAR",
      "üìå„ÉªATAMA-DUYURULARI",
      "üîÑ„ÉªG√ñREV-DEƒûƒ∞≈ûƒ∞KLƒ∞KLERƒ∞",
      "üìù„ÉªBA≈ûVURU-DUYURULARI",
    ],
    visibleRoles: ["@everyone"],
    writeRoles: ["üëë ADALET BAKANI", "üëë ADALET BAKANI YARDIMCISI"],
  },
  {
    name: "‚öñÔ∏è ADALET BAKANLIƒûI",
    channels: [
      "üßæ„ÉªMAHKEME-SONU√áLARI",
      "üìä„ÉªDAVA-ƒ∞STATƒ∞STƒ∞KLERƒ∞",
      "üö®„Éª≈ûƒ∞KAYET-Bƒ∞LDƒ∞Rƒ∞Mƒ∞",
      "üí°„Éª√ñNERƒ∞-VE-ELE≈ûTƒ∞Rƒ∞LER",
    ],
    visibleRoles: [
      "üëë ADALET BAKANI",
      "üëë ADALET BAKANI YARDIMCISI",
      "‚öñÔ∏è H√ÇKƒ∞M",
      "üßë‚Äç‚öñÔ∏è BA≈ûSAVCI",
      "üë®‚Äç‚öñÔ∏è SAVCI",
      "üßë‚Äçüéì STAJYER AVUKAT",
      "üßë‚Äçüíº AVUKAT",
    ],
    writeRoles: [
      "üëë ADALET BAKANI",
      "üëë ADALET BAKANI YARDIMCISI",
      "‚öñÔ∏è H√ÇKƒ∞M",
      "üßë‚Äç‚öñÔ∏è BA≈ûSAVCI",
      "üë®‚Äç‚öñÔ∏è SAVCI",
    ],
  },
  {
    name: "üì• BA≈ûVURULAR",
    channels: [
      "‚öñÔ∏è„ÉªH√ÇKƒ∞M-BA≈ûVURU",
      "üïµÔ∏è„ÉªSAVCI-BA≈ûVURU",
      "üßë‚Äçüíº„ÉªAVUKAT-BA≈ûVURU",
    ],
    visibleRoles: ["@everyone"],
    writeRoles: ["@everyone"],
  },
  {
    name: "üõ°Ô∏è ASKERƒ∞ ƒ∞NZƒ∞BAT KOMUTANLIƒûI",
    channels: [
      "üìã„Éªƒ∞NZƒ∞BAT-RAPOR",
      "üßë‚Äç‚öñÔ∏è„Éªƒ∞NZƒ∞BAT-MAHKEME",
      "‚úÖ„Éªƒ∞NZƒ∞BAT-SONU√á",
    ],
    visibleRoles: [
      "üõ°Ô∏è ƒ∞NZƒ∞BAT KOMUTANI",
      "üë®‚Äç‚úàÔ∏è ƒ∞NZƒ∞BAT SUBAYI",
      "üëÆ ƒ∞NZƒ∞BAT ER",
      "@everyone",
      "üëë ADALET BAKANI",
      "üëë ADALET BAKANI YARDIMCISI",
      "‚öñÔ∏è H√ÇKƒ∞M",
      "üßë‚Äç‚öñÔ∏è BA≈ûSAVCI",
      "üë®‚Äç‚öñÔ∏è SAVCI",
      "üßë‚Äçüéì STAJYER AVUKAT",
      "üßë‚Äçüíº AVUKAT",
    ],
    writeRoles: [
      "üõ°Ô∏è ƒ∞NZƒ∞BAT KOMUTANI",
      "üë®‚Äç‚úàÔ∏è ƒ∞NZƒ∞BAT SUBAYI",
      "üëÆ ƒ∞NZƒ∞BAT ER",
    ],
  },
  {
    name: "ü™ñ JANDARMA GENEL KOMUTANLIƒûI",
    channels: [
      "üìã„ÉªJANDARMA-RAPOR",
      "üßë‚Äç‚öñÔ∏è„ÉªJANDARMA-MAHKEME",
      "‚úÖ„ÉªJANDARMA-SONU√á",
    ],
    visibleRoles: [
      "ü™ñ JANDARMA KOMUTANI",
      "üßë‚Äç‚úàÔ∏è JANDARMA SUBAYI",
      "üëÆ JANDARMA ER",
      "@everyone",
      "üëë ADALET BAKANI",
      "üëë ADALET BAKANI YARDIMCISI",
      "‚öñÔ∏è H√ÇKƒ∞M",
      "üßë‚Äç‚öñÔ∏è BA≈ûSAVCI",
      "üë®‚Äç‚öñÔ∏è SAVCI",
      "üßë‚Äçüéì STAJYER AVUKAT",
      "üßë‚Äçüíº AVUKAT",
    ],
    writeRoles: [
      "ü™ñ JANDARMA KOMUTANI",
      "üßë‚Äç‚úàÔ∏è JANDARMA SUBAYI",
      "üëÆ JANDARMA ER",
    ],
  },
  {
    name: "üïµÔ∏è Mƒ∞LL√é ƒ∞STƒ∞HBARAT TE≈ûKƒ∞LATI",
    channels: [
      "üï∂Ô∏è„ÉªMƒ∞T-RAPOR",
      "‚öñÔ∏è„ÉªMƒ∞T-MAHKEME",
      "üóÇÔ∏è„ÉªMƒ∞T-SONU√á",
    ],
    visibleRoles: [
      "üï∂Ô∏è Mƒ∞T BA≈ûKANI",
      "üß† ƒ∞STƒ∞HBARAT SUBAYI",
      "üïµÔ∏è ALAN AJANI",
      "üëë ADALET BAKANI",
    ],
    writeRoles: [
      "üï∂Ô∏è Mƒ∞T BA≈ûKANI",
      "üß† ƒ∞STƒ∞HBARAT SUBAYI",
      "üïµÔ∏è ALAN AJANI",
    ],
  },
  {
    name: "üì° Bƒ∞Rƒ∞M KOORDƒ∞NASYONU",
    channels: [
      "ü§ù„ÉªBƒ∞Rƒ∞M-KOORDƒ∞NASYONU",
    ],
    visibleRoles: ["@everyone"],
    writeRoles: ["üëë ADALET BAKANI", "üëë ADALET BAKANI YARDIMCISI"],
  },
];

client.on("messageCreate", async (message) => {
  if (message.content === ".ba≈ülat") {
    if (!message.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
      return message.reply("‚ùå Bu komutu kullanmak i√ßin y√∂netici olmalƒ±sƒ±n!");
    }

    const guild = message.guild;
    const everyone = guild.roles.everyone;

    try {
      // Kanallarƒ± sil (komutun yazƒ±ldƒ±ƒüƒ± kanalƒ± silme)
      for (const channel of guild.channels.cache.values()) {
        if (channel.id === message.channel.id) continue;
        try {
          await channel.delete("Sunucu sƒ±fƒ±rlama - yeni kurulum");
        } catch {
          // Hata varsa atla
        }
      }

      // Rolleri sil (everyone ve managed rol hari√ß)
      for (const role of guild.roles.cache.values()) {
        if (role.managed || role.id === everyone.id) continue;
        try {
          await role.delete("Sunucu sƒ±fƒ±rlama - yeni kurulum");
        } catch {
          // Hata varsa atla
        }
      }

      // Roller olu≈üturulsun
      const createdRoles = {};
      for (const roleData of ROLE_ORDERED) {
        const role = await guild.roles.create({
          name: roleData.name,
          reason: "Sunucu kurulumu i√ßin rol olu≈üturuldu",
          // position √∂zelliƒüi Discord API'da doƒürudan ayarlanamƒ±yor,
          // pozisyon Discord aray√ºz√ºnden ayarlanmalƒ± veya ayrƒ± API √ßaƒürƒ±sƒ± ile yapƒ±labilir.
        });
        createdRoles[roleData.name] = role;
      }

      // Kategoriler ve kanallar olu≈üturuluyor
      for (const cat of CATEGORIES) {
        const category = await guild.channels.create({
          name: cat.name.toUpperCase(),
          type: ChannelType.GuildCategory,
          reason: "Sunucu kurulumu i√ßin kategori olu≈üturuldu",
        });

        for (const chName of cat.channels) {
          const permissionOverwrites = [];

          // everyone i√ßin g√∂r√ºnt√ºleme izni
          if (cat.visibleRoles.includes("@everyone")) {
            permissionOverwrites.push({
              id: everyone.id,
              allow: [PermissionsBitField.Flags.ViewChannel],
            });
          } else {
            permissionOverwrites.push({
              id: everyone.id,
              deny: [PermissionsBitField.Flags.ViewChannel],
            });
          }

          // G√∂r√ºn√ºr rollere izin ver
          for (const vRoleName of cat.visibleRoles) {
            if (vRoleName === "@everyone") continue;
            const role = createdRoles[vRoleName];
            if (role) {
              permissionOverwrites.push({
                id: role.id,
                allow: [PermissionsBitField.Flags.ViewChannel],
              });
            }
          }

          // Adalet Bakanlƒ±ƒüƒ± rollerini (mit hari√ß) t√ºm bran≈ü kanallarƒ±na eri≈üim izni ver
          const mitCategoryNames = ["üïµÔ∏è Mƒ∞LL√é ƒ∞STƒ∞HBARAT TE≈ûKƒ∞LATI"];
          if (!mitCategoryNames.includes(cat.name)) {
            const adaletBakanligiRolleri = [
              "üëë ADALET BAKANI",
              "üëë ADALET BAKANI YARDIMCISI",
              "‚öñÔ∏è H√ÇKƒ∞M",
              "üßë‚Äç‚öñÔ∏è BA≈ûSAVCI",
              "üë®‚Äç‚öñÔ∏è SAVCI",
              "üßë‚Äçüéì STAJYER AVUKAT",
              "üßë‚Äçüíº AVUKAT",
            ];
            for (const adaletRoleName of adaletBakanligiRolleri) {
              const role = createdRoles[adaletRoleName];
              if (role && !permissionOverwrites.find(po => po.id === role.id)) {
                permissionOverwrites.push({
                  id: role.id,
                  allow: [PermissionsBitField.Flags.ViewChannel],
                });
              }
            }
          }

          // Yazma izinleri ver
          for (const wRoleName of cat.writeRoles) {
            const role = createdRoles[wRoleName];
            if (role) {
              permissionOverwrites.push({
                id: role.id,
                allow: [PermissionsBitField.Flags.SendMessages],
              });
            }
          }

          await guild.channels.create({
            name: chName.toUpperCase(),
            type: ChannelType.GuildText,
            parent: category.id,
            permissionOverwrites,
            reason: "Sunucu kurulumu i√ßin kanal olu≈üturuldu",
          });
        }
      }

      await message.reply("‚úÖ Sunucu ba≈üarƒ±yla kuruldu!");
    } catch (error) {
      console.error(error);
      if (message.channel) {
        message.channel.send("‚ùå Kurulum sƒ±rasƒ±nda hata olu≈ütu.");
      }
    }
  }
});

client.login(process.env.TOKEN);
